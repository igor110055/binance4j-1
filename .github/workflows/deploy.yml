name: deploy
on:
  push:
    branches:
      - main
env:
  BINANCE_API_KEY: ${{ secrets.BINANCE_API_KEY }}
  BINANCE_API_SECRET: ${{ secrets.BINANCE_API_SECRET }}
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  PASSPHRASE: ${{ secrets.PASSPHRASE }}
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SERVERS: '[{  "id": "ossrh",  "username": "${{ secrets.OSSRH_USERNAME }}",   "password": "${{ secrets.OSSRH_PASSWORD }}"}]'
jobs:
  deploy-core:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Java Setup
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
      - name: Configure Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: ${{ env.SERVERS }}
      - name: Test
        run: cd binance4j-core && mvn test
      - name: Deploy
        run: cd binance4j-core && mvn -DskipTests=true deploy

  deploy-market:
    needs: deploy-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Java Setup
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
      - name: Configure Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: ${{ env.SERVERS }}
      - name: Install binance4j-core
        run: cd binance4j-core && mvn install -DskipTests=true 
      - name: Test
        run: cd binance4j-market && mvn test
      - name: Deploy
        run: cd binance4j-market && mvn -DskipTests=true deploy

  deploy-nft:
    needs: deploy-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Java Setup
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
      - name: Configure Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: ${{ env.SERVERS }}
      - name: Install binance4j-core
        run: cd binance4j-core && mvn install -DskipTests=true
      - name: Test
        run: cd binance4j-nft && mvn test
      - name: Deploy
        run: cd binance4j-nft && mvn -DskipTests=true deploy

  deploy-spot:
    needs: deploy-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Java Setup
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
      - name: Configure Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: ${{ env.SERVERS }}
      - name: Install binance4j-core
        run: cd binance4j-core && mvn install -DskipTests=true
      - name: Test
        run: cd binance4j-spot && mvn test
      - name: Deploy
        run: cd binance4j-spot && mvn -DskipTests=true deploy

  deploy-vision:
    needs: deploy-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Java Setup
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
      - name: Configure Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: ${{ env.SERVERS }}
      - name: Install binance4j-core
        run: cd binance4j-core && mvn install -DskipTests=true
      - name: Test
        run: cd binance4j-vision && mvn test
      - name: Deploy
        run: cd binance4j-vision && mvn -DskipTests=true deploy

  deploy-wallet:
    needs: deploy-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Java Setup
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
      - name: Configure Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: ${{ env.SERVERS }}
      - name: Install binance4j-core
        run: cd binance4j-core && mvn install -DskipTests=true
      - name: Test
        run: cd binance4j-wallet && mvn test
      - name: Deploy
        run: cd binance4j-wallet && mvn -DskipTests=true deploy

  deploy-websocket:
    needs: deploy-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Java Setup
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
      - name: Configure Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: ${{ env.SERVERS }}
      - name: Install binance4j-core
        run: cd binance4j-core && mvn install -DskipTests=true
      - name: Test
        run: cd binance4j-websocket && mvn test
      - name: Deploy
        run: cd binance4j-websocket && mvn -DskipTests=true deploy

  deploy-strategy:
    needs: [deploy-core, deploy-websocket, deploy-vision]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Java Setup
        uses: actions/setup-java@v2
        with:
          java-version: 8
          distribution: 'adopt'
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
      - name: Configure Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: ${{ env.SERVERS }}
      - name: Install binance4j-core
        run: cd binance4j-core && mvn install -DskipTests=true
      - name: Install binance4j-websocket
        run: cd binance4j-websocket && mvn install -DskipTests=true
      - name: Install binance4j-vision
        run: cd binance4j-vision && mvn install -DskipTests=true
      - name: Test
        run: cd binance4j-strategy && mvn test
      - name: Deploy
        run: cd binance4j-strategy && mvn -DskipTests=true deploy
      - name: Javadoc
        uses: JamesIves/github-pages-deploy-action@4.1.8
        with:
          branch: gh-pages
          clean: true
          folder: binance4j-strategy/target/apidocs
          target-folder: binance4j-strategy

  # Javadoc

  # We wait for the repo deployment
  deploy-binance4j-core-javadoc:
      needs: [deploy-core]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Java Setup
          uses: actions/setup-java@v2
          with:
            java-version: 8
            distribution: 'adopt'
        - name: Install binance4j-core
          run: cd binance4j-core && mvn install -DskipTests=true
        - name: Deploy binance4j-core
          uses: JamesIves/github-pages-deploy-action@4.1.8
          with:
            branch: gh-pages
            clean: true
            folder: binance4j-core/target/apidocs
            target-folder: binance4j-core

  # We wait for the repo deployment
  deploy-binance4j-market-javadoc:
      needs: [deploy-market]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Java Setup
          uses: actions/setup-java@v2
          with:
            java-version: 8
            distribution: 'adopt'
        - name: Install binance4j-market
          run: cd binance4j-market && mvn install -DskipTests=true
        - name: Deploy binance4j-market
          uses: JamesIves/github-pages-deploy-action@4.1.8
          with:
            branch: gh-pages
            clean: true
            folder: binance4j-market/target/apidocs
            target-folder: binance4j-market

  # We wait for the repo deployment and the previous javadoc deployment
  deploy-binance4j-nft-javadoc:
      needs: [deploy-nft,deploy-binance4j-market-javadoc]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Java Setup
          uses: actions/setup-java@v2
          with:
            java-version: 8
            distribution: 'adopt'
        - name: Install binance4j-nft
          run: cd binance4j-nft && mvn install -DskipTests=true
        - name: Deploy binance4j-nft javadoc
          uses: JamesIves/github-pages-deploy-action@4.1.8
          with:
            branch: gh-pages
            clean: true
            folder: binance4j-nft/target/apidocs
            target-folder: binance4j-nft

  # We wait for the repo deployment and the previous javadoc deployment
  deploy-binance4j-spot-javadoc:
      needs: [deploy-spot,deploy-binance4j-nft-javadoc]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Java Setup
          uses: actions/setup-java@v2
          with:
            java-version: 8
            distribution: 'adopt'
        - name: Install binance4j-nft
          run: cd binance4j-nft && mvn install -DskipTests=true
        - name: Install binance4j-spot
          run: cd binance4j-spot && mvn install -DskipTests=true
        - name: Deploy binance4j-spot javadoc
          uses: JamesIves/github-pages-deploy-action@4.1.8
          with:
            branch: gh-pages
            clean: true
            folder: binance4j-spot/target/apidocs
            target-folder: binance4j-spot

  # We wait for the repo deployment and the previous javadoc deployment
  deploy-binance4j-vision-javadoc:
      needs: [deploy-vision,deploy-binance4j-spot-javadoc]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Java Setup
          uses: actions/setup-java@v2
          with:
            java-version: 8
            distribution: 'adopt'
        - name: Install binance4j-nft
          run: cd binance4j-nft && mvn install -DskipTests=true
        - name: Install binance4j-spot
          run: cd binance4j-spot && mvn install -DskipTests=true
        - name: Install binance4j-vision
          run: cd binance4j-vision && mvn install -DskipTests=true
        - name: Deploy binance4j-vision javadoc
          uses: JamesIves/github-pages-deploy-action@4.1.8
          with:
            branch: gh-pages
            clean: true
            folder: binance4j-vision/target/apidocs
            target-folder: binance4j-vision

  # We wait for the repo deployment and the previous javadoc deployment
  deploy-binance4j-wallet-javadoc:
      needs: [deploy-wallet,deploy-binance4j-vision-javadoc]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Java Setup
          uses: actions/setup-java@v2
          with:
            java-version: 8
            distribution: 'adopt'
        - name: Install binance4j-nft
          run: cd binance4j-nft && mvn install -DskipTests=true
        - name: Install binance4j-spot
          run: cd binance4j-spot && mvn install -DskipTests=true
        - name: Install binance4j-vision
          run: cd binance4j-vision && mvn install -DskipTests=true
        - name: Install binance4j-wallet
          run: cd binance4j-wallet && mvn install -DskipTests=true
        - name: Deploy binance4j-wallet javadoc
          uses: JamesIves/github-pages-deploy-action@4.1.8
          with:
            branch: gh-pages
            clean: true
            folder: binance4j-wallet/target/apidocs
            target-folder: binance4j-wallet


  # We wait for the repo deployment and the previous javadoc deployment
  deploy-binance4j-websocket-javadoc:
      needs: [deploy-websocket,deploy-binance4j-wallet-javadoc]
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - name: Java Setup
          uses: actions/setup-java@v2
          with:
            java-version: 8
            distribution: 'adopt'
        - name: Install binance4j-websocket
          run: cd binance4j-websocket && mvn install -DskipTests=true
        - name: Deploy binance4j-websocket javadoc
          uses: JamesIves/github-pages-deploy-action@4.1.8
          with:
            branch: gh-pages
            clean: true
            folder: binance4j-websocket/target/apidocs
            target-folder: binance4j-websocket